{"version":3,"sources":["App.js","index.js"],"names":["App","useState","person","setPerson","title","setTitle","value","setValue","pic","setPic","fetchPerson","a","fetch","res","json","results","name","first","last","large","picture","password","login","email","cell","dob","date","age","location","street","city","state","newPerson","Date","toLocaleDateString","address","mobileNo","console","log","trim","handleMouseOver","e","target","dataset","label","useEffect","className","data-label","onMouseOver","onClick","src","alt","ReactDOM","render","document","getElementById"],"mappings":"wNA2JeA,MA/If,WAAgB,IAAD,EACeC,qBADf,mBACNC,EADM,KACEC,EADF,OAEaF,mBAAS,WAFtB,mBAENG,EAFM,KAECC,EAFD,OAGaJ,mBAAS,WAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAKSN,mBACpB,kDANW,mBAKNO,EALM,KAKDC,EALC,KASPC,EAAW,uCAAG,kEAAAC,EAAA,+EAEEC,MAAM,8BAFR,cAEVC,EAFU,gBAGUA,EAAIC,OAHd,gBAGRC,EAHQ,EAGRA,QAHQ,EAQZA,EAAQ,GARI,IAMdC,KAAQZ,EANM,EAMNA,MAAOa,EAND,EAMCA,MAND,EAMQC,KACXC,EAPG,EAOdC,QAAWD,MAPG,EAcZJ,EAAQ,GAJDM,EAVK,EAUdC,MAASD,SACTE,EAXc,EAWdA,MACAC,EAZc,EAYdA,KAZc,IAadC,IAAOC,EAbO,EAaPA,KAAMC,EAbC,EAaDA,IAbC,EAmBZZ,EAAQ,GAAGa,SAHHZ,EAhBI,EAgBda,OAAUb,KACVc,EAjBc,EAiBdA,KACAC,EAlBc,EAkBdA,MAGIC,EAAY,CAChBhB,KAAK,GAAD,OAAKZ,EAAL,YAAca,EAAd,YAAuBA,GAC3BM,QACAE,IAAI,GAAD,OAAK,IAAIQ,KAAKP,GAAMQ,qBAApB,gBAAgDP,GACnDQ,QAAQ,GAAD,OAAKnB,EAAL,aAAcc,EAAd,aAAuBC,GAC9BK,SAAUZ,EACVH,SAAUA,GAGZZ,EAAOU,GACPkB,QAAQC,IAAIN,GACZ7B,EAAU6B,GACV3B,EAAS,QACTE,EAASL,EAAM,KAASqC,QAlCR,kDAoChBF,QAAQC,IAAR,MApCgB,0DAAH,qDA4CjB,SAASE,EAAgBC,GACvB,GAAIA,EAAEC,OAAOC,QAAQC,MAAO,CAC1B,IAAMxC,EAAQqC,EAAEC,OAAOC,QAAQC,MAAML,OACrClC,EAASD,GACTG,EAASL,EAAOE,GAAOmC,SAI3B,OAZAM,qBAAU,WACRnC,MACC,IAWD,sBAAKoC,UAAU,YAAf,UAEE,wBAAQA,UAAU,SAAlB,SACE,gDAGF,wBAAOA,UAAU,SAAjB,UACE,sBACEA,UAAU,iBACVC,aAAW,OACXC,YAAaR,EACbS,QAAST,EAJX,UAME,cAAC,IAAD,CAAWM,UAAU,SACrB,2CAEF,sBACEA,UAAU,kBACVC,aAAW,QACXC,YAAaR,EACbS,QAAST,EAJX,UAME,cAAC,IAAD,CAAYM,UAAU,SACtB,4CAEF,sBACEA,UAAU,gBACVC,aAAW,MACXC,YAAaR,EACbS,QAAST,EAJX,UAME,cAAC,IAAD,CAAkBM,UAAU,SAC5B,+CAEF,sBACEA,UAAU,qBACVC,aAAW,UACXC,YAAaR,EACbS,QAAST,EAJX,UAME,cAAC,IAAD,CAAkBM,UAAU,SAC5B,+CAEF,sBACEA,UAAU,mBACVC,aAAW,WACXC,YAAaR,EACbS,QAAST,EAJX,UAME,cAAC,IAAD,CAASM,UAAU,SACnB,gDAEF,sBACEA,UAAU,qBACVC,aAAW,WACXC,YAAaR,EACbS,QAAST,EAJX,UAME,cAAC,IAAD,CAAcM,UAAU,SACxB,kDAIJ,0BAASA,UAAU,qBAAnB,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKI,IAAK1C,EAAK2C,IAAI,UAGrB,sBAAKL,UAAU,cAAf,UACE,6BAAKxC,IACL,qCAAQF,EAAR,mBAGF,wBAAQ0C,UAAU,aAAaG,QAASvC,EAAxC,kCC/IR0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5b9f8055.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nimport {\n  FaUserAlt,\n  FaMailBulk,\n  FaRegCalendarAlt,\n  FaSearchLocation,\n  FaPhone,\n  FaUserShield,\n} from \"react-icons/fa\";\n\nfunction App() {\n  const [person, setPerson] = useState();\n  const [title, setTitle] = useState(\"default\");\n  const [value, setValue] = useState(\"default\");\n\n  const [pic, setPic] = useState(\n    \"https://randomuser.me/api/portraits/men/43.jpg\"\n  );\n\n  const fetchPerson = async () => {\n    try {\n      const res = await fetch(\"https://randomuser.me/api/\");\n      const { results } = await res.json();\n\n      const {\n        name: { title, first, last },\n        picture: { large },\n      } = results[0];\n      const {\n        login: { password },\n        email,\n        cell,\n        dob: { date, age },\n      } = results[0];\n      const {\n        street: { name },\n        city,\n        state,\n      } = results[0].location;\n\n      const newPerson = {\n        name: `${title} ${first} ${first}`,\n        email,\n        dob: `${new Date(date).toLocaleDateString()} Age:${age}`,\n        address: `${name}, ${city}, ${state}`,\n        mobileNo: cell,\n        password: password,\n      };\n\n      setPic(large);\n      console.log(newPerson);\n      setPerson(newPerson);\n      setTitle(\"name\");\n      setValue(person[\"name\"].trim());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPerson();\n  }, []);\n\n  function handleMouseOver(e) {\n    if (e.target.dataset.label) {\n      const title = e.target.dataset.label.trim();\n      setTitle(title);\n      setValue(person[title].trim());\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      {/* Header */}\n      <header className=\"header\">\n        <h1>User Profile</h1>\n      </header>\n\n      <aside className=\"aside \">\n        <div\n          className=\"on-hover  user\"\n          data-label=\"name\"\n          onMouseOver={handleMouseOver}\n          onClick={handleMouseOver}\n        >\n          <FaUserAlt className=\"icon\" />\n          <span>Name</span>\n        </div>\n        <div\n          className=\"on-hover  email\"\n          data-label=\"email\"\n          onMouseOver={handleMouseOver}\n          onClick={handleMouseOver}\n        >\n          <FaMailBulk className=\"icon\" />\n          <span>Email</span>\n        </div>\n        <div\n          className=\"on-hover  dob\"\n          data-label=\"dob\"\n          onMouseOver={handleMouseOver}\n          onClick={handleMouseOver}\n        >\n          <FaRegCalendarAlt className=\"icon\" />\n          <span>Birthday</span>\n        </div>\n        <div\n          className=\"on-hover  location\"\n          data-label=\"address\"\n          onMouseOver={handleMouseOver}\n          onClick={handleMouseOver}\n        >\n          <FaSearchLocation className=\"icon\" />\n          <span>Location</span>\n        </div>\n        <div\n          className=\"on-hover  mobile\"\n          data-label=\"mobileNo\"\n          onMouseOver={handleMouseOver}\n          onClick={handleMouseOver}\n        >\n          <FaPhone className=\"icon\" />\n          <span>Mobile No</span>\n        </div>\n        <div\n          className=\"on-hover  password\"\n          data-label=\"password\"\n          onMouseOver={handleMouseOver}\n          onClick={handleMouseOver}\n        >\n          <FaUserShield className=\"icon\" />\n          <span>Password</span>\n        </div>\n      </aside>\n      {/* Section */}\n      <section className=\"section inner-grid\">\n        <div className=\"avatar\">\n          <img src={pic} alt=\"img\" />\n        </div>\n\n        <div className=\"detail flex\">\n          <h2>{value}</h2>\n          <p>The {title} of person</p>\n        </div>\n\n        <button className=\"random-btn\" onClick={fetchPerson}>\n          Random Person\n        </button>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}